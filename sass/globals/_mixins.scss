@mixin breakpoint($point) {
    @if $point == desktops {
        @media (min-width: $desktops-width) {
            @content;
        }
    }
    @else if $point == laptops {
        @media (min-width: $laptops-width) {
            @content;
        }
    }
    @else if $point == tablets {
        @media (min-width: $tablets-width) {
            @content;
        }
    }
    @else if $point == mobiles {
        @media (max-width: $mobiles-width) {
            @content;
        }
    }
}

@mixin font-size($fs-map) {
    @each $fs-breakpoint, $fs-font-size in $fs-map {
        @if $fs-breakpoint == null {
            font-size: $fs-font-size;
        }
        @else {
            @media screen and (min-width: $fs-breakpoint) {
                font-size: $fs-font-size;
            }
        }
    }
}

@mixin triangle($width, $dir, $color) {
    @if $dir == up {
        width: 0;
        height: 0;
        border-left: $width solid transparent;
        border-right: $width solid transparent;
        border-bottom: $width solid $color;
    }
    @else if $dir == down {
        border-left: $width solid transparent;
        border-right: $width solid transparent;
        border-top: $width solid $color;
    }
    @else if $dir == left {
        border-top: $width solid transparent;
        border-bottom: $width solid transparent;
        border-right: $width solid $color;
    }
    @else if $dir == right {
        border-top: $width solid transparent;
        border-bottom: $width solid transparent;
        border-left: $width solid $color;
    }
}

@mixin font-smoothing($value: on) {
    @if $value == on {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}

@-webkit-keyframes w70 {
    from {
        width: 0%;
    }

    to {}
}

$icons: sprite-map("icons/*.png", $layout: smart);
$icons-2x: sprite-map("icons-2x/*.png", $layout: smart);

//Sprite mixin, works perfectly with standard defines
@mixin use-sprite($sprite) {
    background-image: sprite-url($icons);
    background-position: sprite-position($icons, $sprite);
    background-repeat: no-repeat;
    overflow: hidden;
    display: block;
    height: image-height(sprite-file($icons, $sprite));
    width: image-width(sprite-file($icons, $sprite));

    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
        background-image: sprite-url($icons-2x);
        background-size: (image-width(sprite-path($icons-2x)) / 2) (image-height(sprite-path($icons-2x)) / 2);
        background-position: round(nth(sprite-position($icons-2x, $sprite), 1) / 2) round(nth(sprite-position($icons-2x, $sprite), 2) / 2);
        height: image-height(sprite-file($icons-2x, $sprite)) / 2;
        width: image-width(sprite-file($icons-2x, $sprite)) / 2;
    }
}